const TelegramBot = require("node-telegram-bot-api");
const Instrument = require("./module/crud-schema"); // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ç–≤–æ—é –º–æ–¥–µ–ª—å
const Order = require('./module/order'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –∑–∞–∫–∞–∑–∞
const Review = require('./module/review-schema'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤


const axios = require('axios');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
const bot = new TelegramBot(process.env.TELEGRAM_TOKEN, { polling: true });

// ID —á–∞—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
const supportChatId = 6183727519;  // –¢–≤–æ–π chat ID

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
bot.setMyCommands([
     { command: '/start', description: '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É' },
     { command: '/products', description: '–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤' },
     { command: '/category', description: '–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º' },
     { command: '/support', description: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞' },
     { command: "/myorders", description: "–ú–æ–∏ –∑–∞–∫–∞–∑—ã" },
]);

// –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const userMessages = {};
const waitingForSupportMessage = {};  // –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
const waitingForCategoryMessage = {}; // –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
bot.onText(/\/start/, (msg) => {
     const startMessage = `
üéµ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –∑–≤—É–∫–∞, ${msg.from.first_name || '–¥—Ä—É–≥'}!* 

–ó–¥–µ—Å—å –∫–∞–∂–¥—ã–π –Ω–∞–π–¥—ë—Ç —Å–≤–æ—é –Ω–æ—Ç—É.

üéß –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!
    `;

     bot.sendMessage(msg.chat.id, startMessage, { parse_mode: 'Markdown' });
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
bot.onText(/\/help/, (msg) => {
     const helpMessage = `
üìö *–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –±–æ—Ç—É*:

1Ô∏è‚É£ /start ‚Äî *–ù–∞—á–Ω–∏ —Å–Ω–∞—á–∞–ª–∞*. –ü–æ–ª—É—á–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞!

2Ô∏è‚É£ üéµ /products ‚Äî *–ü—Ä–æ—Å–º–æ—Ç—Ä–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã*. –ù–∞–∂–º–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.

3Ô∏è‚É£ üóÇ /category ‚Äî *–ù–∞–π–¥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º*. –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: \`/category –≥–∏—Ç–∞—Ä–∞\`.

4Ô∏è‚É£ üõí /support ‚Äî *–°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π*. –ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã –ø–æ–º–æ–∂–µ–º.

üîÑ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è*: –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –µ—ë –≤ —á–∞—Ç!
    `;
     bot.sendMessage(msg.chat.id, helpMessage, { parse_mode: 'Markdown' });
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /products –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
bot.onText(/\/products/, async (msg) => {
     try {
          const response = await axios.get('http://localhost:8080/api/getall');
          const products = response.data;

          if (products.length > 0) {
               products.forEach((product) => {
                    const caption = `
üíº *${product.nomi}*

üí∏ *–¶–µ–Ω–∞*: ${product.narxi} —Ä—É–±.

‚úÖ –í –Ω–∞–ª–∏—á–∏–∏: *${product.soni} —à—Ç.*
                `;
                    bot.sendPhoto(msg.chat.id, product.rasm, {
                         caption: caption,
                         parse_mode: 'Markdown',
                         reply_markup: {
                              inline_keyboard: [
                                   [{ text: 'üõí –ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å', callback_data: `buy_${product._id}` }],
                                   [{ text: 'üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data: `details_${product._id}` }]
                              ]
                         }
                    });
               });
          } else {
               bot.sendMessage(msg.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç.");
          }
     } catch (error) {
          bot.sendMessage(msg.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç.");
     }
});

// –•—Ä–∞–Ω–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É
const userMessageInfo = {};

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /support –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É
bot.onText(/\/support/, (msg) => {
     const chatId = msg.chat.id;
     bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –º—ã –ø–µ—Ä–µ–¥–∞–¥–∏–º –µ–≥–æ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É.");
     waitingForSupportMessage[chatId] = true;
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏
bot.on('message', (msg) => {
     const chatId = msg.chat.id;
     const messageText = msg.text;

     if (waitingForSupportMessage[chatId] && messageText && !messageText.startsWith('/')) {
          userMessages[chatId] = messageText;
          userMessageInfo[chatId] = {
               username: msg.from.username || '–±–µ–∑ –∏–º–µ–Ω–∏',
               messageId: msg.message_id
          };

          bot.sendMessage(supportChatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${userMessageInfo[chatId].username} (${chatId}) –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"${messageText}"\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π: /reply ${chatId} [–í–∞—à –æ—Ç–≤–µ—Ç]`);
          bot.sendMessage(chatId, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.");
          waitingForSupportMessage[chatId] = false;
     }
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /reply –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
bot.onText(/\/reply (\d+) (.+)/, (msg, match) => {
     const chatId = match[1];
     const replyText = match[2];
     bot.sendMessage(chatId, `–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: ${replyText}`);
     bot.sendMessage(supportChatId, `–í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @${userMessageInfo[chatId]?.username || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'} (${chatId}).`);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
bot.on('message', (msg) => {
     const chatId = msg.chat.id;
     const messageText = msg.text;

     if (waitingForCategoryMessage[chatId] && messageText && !messageText.startsWith('/')) {
          const category = messageText.toLowerCase();

          axios.get('http://localhost:8080/api/getall')
               .then(response => {
                    const products = response.data.filter(p => p.turi.toLowerCase() === category);

                    if (products.length > 0) {
                         products.forEach((product) => {
                              bot.sendPhoto(msg.chat.id, product.rasm, {
                                   caption: `üéµ *${product.nomi}* \n\nüìñ ${product.malumoti}\nüí∞ –¶–µ–Ω–∞: ${product.narxi} —Ä—É–±.\nüì¶ –í –Ω–∞–ª–∏—á–∏–∏: ${product.soni} —à—Ç.\nüîç –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.turi}`,
                                   parse_mode: 'Markdown',
                                   reply_markup: {
                                        inline_keyboard: [
                                             [{ text: '–ö—É–ø–∏—Ç—å', callback_data: `buy_${product._id}` }],
                                             [{ text: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data: `details_${product._id}` }]
                                        ]
                                   }
                              });
                         });
                    } else {
                         bot.sendMessage(chatId, `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}".`);
                    }
               })
               .catch(error => {
                    bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.");
               });

          waitingForCategoryMessage[chatId] = false;
     }
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /category –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
bot.onText(/\/category/, (msg) => {
     const chatId = msg.chat.id;
     bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞.");
     waitingForCategoryMessage[chatId] = true;
});

// –§–ª–∞–≥ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —á–µ–∫–∞
const waitingForPaymentConfirmation = {};

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ–∫–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
bot.on('message', (msg) => {
     const chatId = msg.chat.id;

     if (waitingForPaymentConfirmation[chatId]) {
          if (msg.photo) {
               bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ–∫! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à –ø–ª–∞—Ç–µ–∂ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.");
               const fileId = msg.photo[msg.photo.length - 1].file_id;
               bot.sendPhoto(supportChatId, fileId, {
                    caption: `–ü–æ–ª—É—á–µ–Ω —á–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${msg.from.username || '–±–µ–∑ –∏–º–µ–Ω–∏'} (${chatId}). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–ª–∞—Ç—É.`,
                    reply_markup: {
                         inline_keyboard: [
                              [{ text: '‚úÖ –í–∞—à –ø–ª–∞—Ç—ë–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω', callback_data: `confirm_${chatId}` }],
                              [{ text: '‚ùå –í–∞—à –ø–ª–∞—Ç—ë–∂ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω', callback_data: `decline_${chatId}` }]
                         ]
                    }
               });
               waitingForPaymentConfirmation[chatId] = false;
          } else {
               bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.");
          }
     }
});

/// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
bot.on('callback_query', async (query) => {
     const chatId = query.message.chat.id;
     const data = query.data;

     if (data.startsWith('details_')) {
          const productId = data.split('_')[1];

          try {
               // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–µ
               const product = await Instrument.findById(productId);
               const reviews = await Review.find({ productId: productId });

               if (product) {
                    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ
                    let productDetails = `
üéµ *${product.nomi}*

üìñ *–û–ø–∏—Å–∞–Ω–∏–µ*: ${product.malumoti}
üí∞ *–¶–µ–Ω–∞*: ${product.narxi} —Ä—É–±.
üì¶ *–í –Ω–∞–ª–∏—á–∏–∏*: ${product.soni} —à—Ç.
üîç *–ö–∞—Ç–µ–≥–æ—Ä–∏—è*: ${product.turi}

–û—Ç–∑—ã–≤—ã –æ —Ç–æ–≤–∞—Ä–µ:
                `;

                    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                    if (reviews.length > 0) {
                         reviews.forEach((review, index) => {
                              productDetails += `\n${index + 1}. ${review.reviewText} - –û—Å—Ç–∞–≤–ª–µ–Ω–æ: ${review.reviewDate.toLocaleDateString()}`;
                         });
                    } else {
                         productDetails += "\n–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.";
                    }

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ –≤–º–µ—Å—Ç–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏
                    bot.sendMessage(chatId, productDetails, { parse_mode: 'Markdown' });
               } else {
                    bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
               }
          } catch (error) {
               bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
          }
     }
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
async function decreaseProductQuantity(productId, amount) {
     try {
          // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –ø–æ ID
          const product = await Instrument.findById(productId);

          if (product && product.soni >= amount) {
               // –í—ã—á–∏—Ç–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
               product.soni -= amount;

               // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
               await product.save();
               console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ "${product.nomi}" —É—Å–ø–µ—à–Ω–æ —É–º–µ–Ω—å—à–µ–Ω–æ –Ω–∞ ${amount}. –û—Å—Ç–∞–ª–æ—Å—å: ${product.soni}`);

               return true; // –£—Å–ø–µ—à–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
          } else if (product && product.soni < amount) {
               console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ.");
               return false; // –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞
          } else {
               console.log("–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.");
               return false; // –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω
          }
     } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞:", error);
          return false; // –û—à–∏–±–∫–∞
     }
}



// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å"
bot.on('callback_query', async (query) => {
     const chatId = query.message.chat.id;
     const data = query.data;

     if (data.startsWith('buy_')) {
          const productId = data.split('_')[1];

          try {
               // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –ø–æ ID
               const product = await Instrument.findById(productId);

               if (product) {
                    const confirmationMessage = `
üõí *–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!*
–í—ã –≤—ã–±—Ä–∞–ª–∏ *${product.nomi}* –∑–∞ *${product.narxi} —Ä—É–±.*
–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
                `;

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                    const success = await decreaseProductQuantity(productId, 1); // –í—ã—á–∏—Ç–∞–µ–º 1 —Ç–æ–≤–∞—Ä

                    if (success) {
                         // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                         const newOrder = new Order({
                              userId: chatId, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                              productId: product._id, // ID —Ç–æ–≤–∞—Ä–∞
                              productName: product.nomi, // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                              quantity: 1, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
                              price: product.narxi // –¶–µ–Ω–∞
                         });

                         await newOrder.save(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ MongoDB

                         // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –≤—ã–±–æ—Ä–æ–º –æ–ø–ª–∞—Ç—ã
                         bot.sendMessage(chatId, confirmationMessage, {
                              parse_mode: 'Markdown',
                              reply_markup: {
                                   inline_keyboard: [
                                        [{ text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π', callback_data: `pay_card_${productId}_${product.narxi}` }],
                                        [{ text: 'üí∏ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ TON', callback_data: `pay_ton_${productId}_${product.narxi}` }]
                                   ]
                              }
                         });
                    } else {
                         // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                         bot.sendMessage(chatId, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ.");
                    }
               } else {
                    bot.sendMessage(chatId, "–û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.");
               }
          } catch (error) {
               bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–∫—É–ø–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
          }
     }
});
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã
bot.on('callback_query', (query) => {
     const chatId = query.message.chat.id;
     const data = query.data;

     if (data.startsWith('pay_card_')) {
          // –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π
          const parts = data.split('_');
          const productId = parts[2];  // ID —Ç–æ–≤–∞—Ä–∞
          const amount = parts[3];     // –°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö

          bot.sendMessage(chatId, `
üí≥ –í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É –∫–∞—Ä—Ç–æ–π.
–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: *${amount} —Ä—É–±.*
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:

üè¶ *–í–ª–∞–¥–µ–ª–µ—Ü*: SHUKURULLO ALIXONOV
üè¶ *–ú–§–û*: 00873
üí≥ *–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã*: 5189 6900 6672 1176
üìÖ *–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è*: 09/25

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.
        `, { parse_mode: 'Markdown' });

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —á–µ–∫–∞
          waitingForPaymentConfirmation[chatId] = true;

     } else if (data.startsWith('pay_ton_')) {
          // –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ TON
          const parts = data.split('_');
          const productId = parts[2];  // ID —Ç–æ–≤–∞—Ä–∞
          const tonAmount = parts[3];  // –°—É–º–º–∞ –≤ TON

          bot.sendMessage(chatId, `
üí∏ –í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ TON.
–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: *${tonAmount} TON*.
–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ TON-–∫–æ—à–µ–ª–µ–∫:

ü™ô *TON Wallet*: UQBaJ2hUD7xS7U2upyTscIIlgOpAwjgNItazKnjil4vohYPY

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.
        `, { parse_mode: 'Markdown' });

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —á–µ–∫–∞
          waitingForPaymentConfirmation[chatId] = true;
     }
});

// –•—Ä–∞–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userOrders = {};
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
function generateOrderNumber() {
     const prefix = 'ORD';
     const randomNum = Math.floor(100000 + Math.random() * 900000);
     return `${prefix}-${randomNum}`;
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
bot.on('callback_query', async (query) => {
     const data = query.data;
     const adminChatId = query.message.chat.id;

     if (data.startsWith('confirm_')) {
          const userId = data.split('_')[1];
          const orderNumber = generateOrderNumber();

          bot.sendMessage(userId, `‚úÖ –í–∞—à –ø–ª–∞—Ç—ë–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: *${orderNumber}*`, { parse_mode: 'Markdown' });
          bot.sendMessage(adminChatId, `–ü–ª–∞—Ç—ë–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ${orderNumber}`);

          const purchasedProduct = {
               orderNumber,
               productId: data.split('_')[1],
               productName: "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞",
               date: new Date().toLocaleDateString()
          };

          if (!userOrders[userId]) {
               userOrders[userId] = [];
          }
          userOrders[userId].push(purchasedProduct);

          const pickupMessage = `
üéâ *–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é!*
üì¶ *–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞*: ${orderNumber}
üè† *–ú–µ—Å—Ç–æ –ø–æ–ª—É—á–µ–Ω–∏—è*: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123, –î–æ—Å—Ç–∞–≤–∫–∞ –ü—É–Ω–∫—Ç #4
üïí *–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã*: –ü–Ω-–ü—Ç —Å 10:00 –¥–æ 19:00

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!
        `;
          bot.sendMessage(userId, pickupMessage, { parse_mode: 'Markdown' });

     } else if (data.startsWith('decline_')) {
          const userId = data.split('_')[1];
          bot.sendMessage(userId, "‚ùå –í–∞—à –ø–ª–∞—Ç—ë–∂ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
          bot.sendMessage(adminChatId, `–ü–ª–∞—Ç—ë–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ—Ç–∫–ª–æ–Ω—ë–Ω.`);
     }
});



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /myorders –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
bot.onText(/\/myorders/, async (msg) => {
     const chatId = msg.chat.id;

     try {
          // –ò—â–µ–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ ID (chatId)
          const orders = await Order.find({ userId: chatId }).populate('productId');

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑—ã
          if (orders.length > 0) {
               let buttons = [];

               // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –∏ —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏
               orders.forEach((order) => {
                    if (order.productId) {
                         // –ö–Ω–æ–ø–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ —Å–ø—Ä–∞–≤–∞
                         buttons.push([
                              { text: `${order.productId.nomi}`, callback_data: `details_${order.productId._id}` },  // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
                              { text: `‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤`, callback_data: `add_review_${order.productId._id}` }    // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞
                         ]);
                    }
               });

               // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
               bot.sendMessage(chatId, "–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏:", {
                    reply_markup: {
                         inline_keyboard: buttons
                    }
               });
          } else {
               bot.sendMessage(chatId, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–∫—É–ø–æ–∫.");
          }
     } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫:", error);
          bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
     }
});


// –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
const waitingForReview = {};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã"
bot.on('callback_query', async (query) => {
     const data = query.data;

     if (data.startsWith('view_reviews_')) {
          const productId = data.split('_')[2];
          const chatId = query.message.chat.id;

          // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤—ã –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞
          try {
               const reviews = await Review.find({ productId: productId });

               if (reviews.length > 0) {
                    let reviewList = reviews.map((review, index) => `${index + 1}. ${review.reviewText} ‚Äî ${review.reviewDate.toLocaleDateString()}`).join('\n');

                    bot.sendMessage(chatId, `–û—Ç–∑—ã–≤—ã:\n\n${reviewList}`, { parse_mode: 'Markdown' });
               } else {
                    bot.sendMessage(chatId, "–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.");
               }
          } catch (error) {
               bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
          }
     }
});



// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
bot.on('callback_query', (query) => {
     const data = query.data;

     if (data.startsWith('add_review_')) {
          const productId = data.split('_')[2];
          const chatId = query.message.chat.id;

          // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤
          bot.sendMessage(chatId, `–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥—É–∫—Ç–µ ${productId}.`);

          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          waitingForReview[chatId] = productId;
     }
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞
bot.on('message', async (msg) => {
     const chatId = msg.chat.id;

     // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
     if (waitingForReview[chatId]) {
          const productId = waitingForReview[chatId];
          const reviewText = msg.text; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞

          try {
               // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—É–ø–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç
               const purchasedProduct = await Order.findOne({ userId: chatId, productId });

               if (purchasedProduct) {
                    // –°–æ–∑–¥–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤
                    const newReview = new Review({
                         userId: chatId,
                         productId: productId,
                         reviewText: reviewText,
                         reviewDate: new Date() // –î–∞—Ç–∞ –æ—Ç–∑—ã–≤–∞
                    });

                    await newReview.save();

                    bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!");
               } else {
                    bot.sendMessage(chatId, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –ø–æ–∫—É–ø–∞–ª–∏ –µ–≥–æ.");
               }
          } catch (error) {
               bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
          }

          // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
          delete waitingForReview[chatId];
     }
});






// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /review –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
bot.onText(/\/review (\w+) (.+)/, async (msg, match) => {
     const chatId = msg.chat.id;
     const productId = match[1]; // ID –ø—Ä–æ–¥—É–∫—Ç–∞
     const reviewText = match[2]; // –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞

     try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—É–ø–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç
          const purchasedProduct = await Order.findOne({ userId: chatId, productId });

          if (purchasedProduct) {
               // –°–æ–∑–¥–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤
               const newReview = new Review({
                    userId: chatId, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    productId: productId, // ID –ø—Ä–æ–¥—É–∫—Ç–∞
                    reviewText: reviewText // –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
               });

               await newReview.save(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

               bot.sendMessage(chatId, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ.");
          } else {
               bot.sendMessage(chatId, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –Ω–∞ —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –ø–æ–∫—É–ø–∞–ª–∏ –µ–≥–æ.");
          }
     } catch (error) {
          bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
     }
});

// –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
function addReviewToDatabase(productId, userId, review) {
     console.log(`–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤: –ø—Ä–æ–¥—É–∫—Ç ${productId}, –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${review}`);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ (–ø—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏)
function updateOrderStatus(userId, status, orderNumber) {
     console.log(`–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞: ${status}, –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ${orderNumber || '–Ω–µ—Ç –Ω–æ–º–µ—Ä–∞'}`);
}

function updateOrderStatus(userId, status) {
     console.log(`–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞: ${status}`);
}
